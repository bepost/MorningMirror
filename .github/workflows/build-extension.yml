name: üî® Build Extension

on:
  push:
    branches: [main]
    paths:
      - "extension/**"
      - ".github/workflows/build-extension.yml"
  pull_request:
    branches: [main]
    paths:
      - "extension/**"
      - ".github/workflows/build-extension.yml"
  release:
    types: [published]

jobs:
  check-changes:
    name: üîç Check Changes
    runs-on: ubuntu-latest
    outputs:
      extension-changed: ${{ steps.changes.outputs.extension }}
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîç Check for changes in extension folder
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            extension:
              - "extension/**"
              - ".github/workflows/build-extension.yml"

  build:
    name: üèóÔ∏è Build & Package
    needs: check-changes
    if: needs.check-changes.outputs.extension-changed == 'true' || github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: npm
          cache-dependency-path: "extension/package-lock.json"

      - name: üì¶ Install dependencies
        working-directory: ./extension
        run: npm ci

      - name: üî® Build extension (development)
        if: github.event_name != 'release'
        working-directory: ./extension
        run: npm run build

      - name: üèóÔ∏è Build extension (production)
        if: github.event_name == 'release'
        working-directory: ./extension
        run: npm run build-prod

      - name: üè∑Ô∏è Update manifest version
        if: github.event_name == 'release'
        working-directory: ./extension
        run: |
          # Extract version from tag (remove 'v' prefix if present)
          VERSION=$(echo "${{ github.event.release.tag_name }}" | sed 's/^v//')

          # Update manifest.json version
          jq --arg version "$VERSION" '.version = $version' public/manifest.json > dist/manifest.json

          echo "Updated manifest version to: $VERSION"

      - name: üì¶ Create zip archive
        working-directory: ./extension
        run: |
          cd dist
          if [ "${{ github.event_name }}" == "release" ]; then
            zip -r ../MorningMirror-${{ github.event.release.tag_name }}.zip .
          else
            zip -r ../MorningMirror.zip .
          fi
          cd ..

      - name: ‚¨ÜÔ∏è Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension-build
          path: extension/MorningMirror*.zip
          retention-days: 30

      - name: üöÄ Upload to Chrome Web Store
        if: github.event_name == 'release'
        working-directory: ./extension
        run: |
          npx chrome-webstore-upload upload \
            --source MorningMirror-${{ github.event.release.tag_name }}.zip \
            --extension-id ${{ secrets.EXTENSION_ID }} \
            --client-id ${{ secrets.CLIENT_ID }} \
            --client-secret ${{ secrets.CLIENT_SECRET }} \
            --refresh-token ${{ secrets.REFRESH_TOKEN }} \
            --publish

      - name: üìé Attach extension to GitHub release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: extension/MorningMirror-${{ github.event.release.tag_name }}.zip
